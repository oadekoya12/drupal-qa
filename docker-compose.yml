version: '3.8'

services:
  # Drupal Service
  drupal:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UUID: ${UUID:-1000}  # Default UID is 1000 if not provided
        GUID: ${GUID:-1000}  # Default GID is 1000 if not provided
    image: drupal:10.4-php8.3-apache-bookworm
    container_name: drupal-qa-testing
    ports:
      - "8950:80"  # Host port 8950 mapped to container port 80
    volumes:
      - ./drupal:/opt/drupal  # Mount local drupal directory
      - ./optinclude:/opt/include  # Mount directory with compinstall.sh
      - ./tests:/opt/tests  # Mount tests directory
      - ./allure-results:/allure-results  # Mount Allure results directory
    environment:
      - DRUPAL_DB_HOST=db  # MariaDB service name
      - DRUPAL_DB_NAME=drupal  # Database name
      - DRUPAL_DB_USER=drupal  # Database user
      - DRUPAL_DB_PASSWORD=drupal  # Database password
      - ELASTICSEARCH_HOST=elasticsearch  # Elasticsearch service name
      - ELASTICSEARCH_PORT=9200  # Elasticsearch port
    depends_on:
      - db
      - elasticsearch  # Start Elasticsearch first
    networks:
      - drupal_network
    # Run compinstall.sh before starting Apache
    command: ["/bin/sh", "-c", ". /opt/include/compinstall.sh && apache2-foreground"]

  # Playwright Service
  playwright:
    build:
      context: ./playwright
      dockerfile: Dockerfile
      args:
        UUID: ${UUID:-1000}  # Default UID is 1000 if not provided
        GUID: ${GUID:-1000}  # Default GID is 1000 if not provided
    container_name: playwright-testing
    volumes:
      - ./tests:/tests
      - ./playwright/playwright.config.js:/tests/playwright.config.js
      - ./allure-results:/allure-results
    networks:
      - drupal_network
    depends_on:
      - drupal  # Ensure Drupal is started first
    entrypoint: ["/bin/sh", "-c", "tail -f /dev/null && npm install && npx playwright install && npx playwright test"]

  # Other services remain unchanged
  db:
    image: mariadb:10.5
    container_name: mariadb
    ports:
      - "8949:3306"  # Host port 8949 mapped to container port 3306
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword  # Root password
      - MYSQL_DATABASE=drupal  # Database name
      - MYSQL_USER=drupal  # Database user
      - MYSQL_PASSWORD=drupal  # Database password
    volumes:
      - db_data:/var/lib/mysql  # Persistent data
    networks:
      - drupal_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8948:80"  # Host port 8948 mapped to container port 80
    environment:
      - PMA_HOST=db  # MariaDB service name
      - PMA_USER=drupal  # Database user
      - PMA_PASSWORD=drupal  # Database password
    depends_on:
      - db  # Start MariaDB first
    networks:
      - drupal_network

  elasticsearch:
    image: elasticsearch:8.17.1  # Updated to the specified version
    container_name: elasticsearch
    ports:
      - "8947:9200"  # Host port 8947 mapped to container port 9200 (HTTP)
      - "8946:9300"  # Host port 8946 mapped to container port 9300 (Cluster)
    environment:
      - discovery.type=single-node  # Single-node setup
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Memory limits
      - xpack.security.enabled=false  # Disable security for simplicity
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data  # Persistent data
    networks:
      - drupal_network

  allure:
    build:
      context: ./allure
      dockerfile: Dockerfile
      args:
        UUID: ${UUID:-1000}  # Default UID is 1000 if not provided
        GUID: ${GUID:-1000}  # Default GID is 1000 if not provided
    container_name: allure-report
    ports:
      - "8952:4040"  # Host port 8952 mapped to container port 4040
    volumes:
      - ./allure-results:/allure-results  # Mount Allure results directory
    networks:
      - drupal_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        UUID: ${UUID:-1000}  # Default UID is 1000 if not provided
        GUID: ${GUID:-1000}  # Default GID is 1000 if not provided
    container_name: angular-frontend
    ports:
      - "8951:80"  # Host port 8951 mapped to container port 80
    networks:
      - drupal_network
    depends_on:
      - elasticsearch  # Ensure Elasticsearch is started first

# Volumes for persistent data
volumes:
  db_data:  # MariaDB data
  elasticsearch_data:  # Elasticsearch data

# Shared network for all services
networks:
  drupal_network:
    driver: bridge
